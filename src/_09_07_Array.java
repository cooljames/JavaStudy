import java.lang.reflect.Array;
import java.util.Scanner;

/**
 * @author James
 * 
 * 배열(Array)
 * -> Java언어 차원에서 지원하는 자료구조
 * -> 자료구조(Data Structure)
 * -> 프로그래밍에 필요한 데이타들을 효과적으로 관리하는 방법
 * -> 데이타 보관, 관리 방법
 * 
 *  .운영체제: 메모리, 하드웨어, 실행파일 관리 - 작업관리자는 프로세스(선형리스트)를, 탐색기는 트리구조(계층적)로 관리.
 *  (프로그래머에게 배열은 필수!!!)
 *  
 *  -> 문법이기 전에 자료구조에 대한 것을 알아야 한다.
 *  ===============================================================================
 *  // C, C++, C#, Java, Javascript 등에서 공통(C언어에서 파생된 언어)
 *  ===============================================================================
 *  배열의 특징!
 *  -> 연속된 메모리 공간에 같은 타입의 데이타들의 집합! ==> 연접리스트(구 프로그래밍)
 *  -> 인덱스를 통해 랜덤 엑세스 가능 ==> 배열 이름[1] : 이런 형태를 인덱스 혹은 첨자라고 한다. 
 *  -> []연산자를 사용한다.
 *  
 *  ===============================================================================
 *  // 배열의 선언과 초기화
 *  ===============================================================================
 *  -> 데이터가 저장될 수 있는 메모리 공간에 이름을 변수라 하고,
 *  -> 변수들이 모여있는 집합을 배열이라 한다.(데이터 저장 공간들)
 *  배열의 선언!!
 *  타입[] 배열의 이름; // ex) 정수 5개의 배열
 *  
 *  int [] array; 정수 5개를 참조하는 참조 변수 생성(스택에 생성 됨), c/c++에서는 int array[5];
 *  array = new int[]; 힙메모리에 동적인 할당을 하게 됨.
 *  배열을 선언하게 되면 두개의 메모리 주소를 갖게 된다. 참조 주소와 실제 배열
 *  //* C언어에서의 배열은 컴파일 시 정해진다. 따라서 바뀌지 않는다.
 *  //* Ctl + Space 하면 사용할 수 있는 것들을 선택해서 코딩할 수 있다.
 */
public class _09_07_Array {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
/*		System.out.println("일반적으로 가장 유행에 민감한 품목을 디스플레이 하게 된다.");
		System.out.println("가게에 마네킹을 세워서 전부 다른 품목을 전시~.");
		System.out.println("그러기 위해서는 많은 공간과 작업이 필요하게 된다.");
		System.out.println("배열은 그런 관리를 위한 기본적인 것이다.");
		*/
	    
		Scanner scan = new Scanner(System.in);
		int ArraySize = scan.nextInt();
		int [] array = new int[ArraySize]; // 사용자가 입력해야 할당할 크기가 결정! --> 실행시간
/*		for (int i = 0; i < array.length; i++) {
			// 배열의 인덱스는 0부터 시작 사이즈 - 1 : 범위를 넘어서면 OutOfBoundsException을 발생시킴.
			array[0] = 100;
			array[1] = 200;
			array[2] = 300;
			array[3] = 400;
			array[4] = 500;
		System.out.println("[" + array[i] + "]"); //인덱스를 통한 접근
		}*/
		//for each: --> for문의 진화.(If -> while -> for -> for each)
		for(int i:array) // 배열 등(Collection)일 경우에  적용시킴.
			             // 배열을 한 번 씩 실행시키겠다라는 문장.
		{
			System.out.println(i);
		}
		for (int i = 0; i < array.length; i++) {
			int j = array[i];
			
		}
	}
}
